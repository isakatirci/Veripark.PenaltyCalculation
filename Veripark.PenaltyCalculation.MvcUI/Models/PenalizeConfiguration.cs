// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Veripark.PenaltyCalculation.MvcUI.Models
{

    // Penalize
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class PenalizeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Penalize>
    {
        public PenalizeConfiguration()
            : this("dbo")
        {
        }

        public PenalizeConfiguration(string schema)
        {
            ToTable("Penalize", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType("int").IsRequired();
            Property(x => x.PenalizedAmount).HasColumnName(@"PenalizedAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,5);

            // Foreign keys
            HasRequired(a => a.Country).WithMany(b => b.Penalizes).HasForeignKey(c => c.CountryId).WillCascadeOnDelete(false); // FK_Penalize_Country
        }
    }

}
// </auto-generated>
